//Tree Diameter 2nd Approach
import java.util.*;
public class Tree {
    public static class Node{
        int data;
        Node left;
        Node right;

        Node(int data){
            this.data=data;
            this.left=null;
            this.right=null;
        }
    }

    public static int height(Node root){
        if(root==null){
            return 0;
        }
        
        int lh=height(root.left);
        int rh=height(root.right);
        return Math.max(lh,rh)+1;
    }

    public static int diameter(Node root){
        if(root==null){
            return 0;
        }
        
        int lh=height(root.left);
        int rh=height(root.right);
        int ld=diameter(root.left);
        int rd=diameter(root.right);

        int self=lh+rh+1;

        return Math.max(Math.max(ld, rd),self);
    }
    public static class Info{
        int h;
        int d;

        Info(int h,int d){
            this.h=h;
            this.d=d;
        }
    }

    public static Info diameter2(Node root){
        if(root==null){
            return new Info(0,0);
        }

        Info l= diameter2(root.left);
        Info r= diameter2(root.right);

        int self=(Math.max(Math.max(l.d, r.d),l.h+r.h+1));
        int h=(Math.max(l.h,r.h)+1);
        return new Info(h,self);
    }
    
    public static void main(String[] args) {
       Node root=new Node(1);
       root.left=new Node(2);
       root.right=new Node(3);
       root.left.left=new Node(4);
       root.left.right=new Node(5);
       root.right.left=new Node(6);
       root.right.right=new Node(7);

       //System.out.println(height(root));
       //System.out.println(sumNodes(root));
       //System.out.println(diameter(root));
       System.out.println(diameter2(root).d);
       System.out.println(diameter2(root).h);
    }
    
}
